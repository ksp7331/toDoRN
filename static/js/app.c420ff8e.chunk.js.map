{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","updating","setUpdating","text","setText","toDos","setToDos","useEffect","loadToDos","travel","AsyncStorage","setItem","toString","work","onChangetext","event","saveToDos","toSave","JSON","stringify","w","getItem","parse","s","addToDo","newToDos","Date","now","completed","updateModeToDo","id","Object","keys","map","key","updateToDo","completedToDo","deleteToDo","Platform","OS","confirm","Alert","alert","onPress","View","style","styles","container","StatusBar","header","TouchableOpacity","Text","btnText","color","TextInput","value","returnKeyType","onChangeText","onSubmitEditing","input","placeholder","ScrollView","filter","toDo","update","toDoText","textDecorationLine","Fontisto","name","size","marginLeft","StyleSheet","create","flex","backgroundColor","paddingHorizontal","width","flexDirection","alignItems","justifyContent","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","marginBottom","flexGrow"],"mappings":"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","file":"static/js/app.c420ff8e.chunk.js","sourcesContent":["export const theme = {\r\n    background: \"black\",\r\n    grey: \"#3A3D40\",\r\n    toDoBg: \"#5C5C60\",\r\n};","import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { Alert, Platform, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Fontisto } from '@expo/vector-icons';\nimport { theme } from './colors';\n\n\nconst STORAGE_KEY = \"@toDos\";\nconst STORAGE_WORK = \"@work\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  useEffect(() => {\n    loadToDos();\n  }, [])\n\n  const travel = async() => {\n    setWorking(false);\n    await AsyncStorage.setItem(STORAGE_WORK, false.toString());\n  };\n  const work = async() => {\n    setWorking(true);\n    await AsyncStorage.setItem(STORAGE_WORK, true.toString());\n  }\n\n  const onChangetext = (event) => {setText(event)}\n\n\n  const saveToDos = async(toSave) => {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave))\n  }\n  const loadToDos = async() => {\n    const w = await AsyncStorage.getItem(STORAGE_WORK);\n    if (w){\n      setWorking(JSON.parse(w));\n    }\n    const s = await AsyncStorage.getItem(STORAGE_KEY);\n    if (s) {\n      setToDos(JSON.parse(s));\n    }\n  }\n \n\n\n  const addToDo = async() => {\n    if(text===\"\"){\n      return;\n    }\n    const newToDos = {...toDos, [Date.now()]:{text, working, updating: false, completed: false,}}\n    setToDos(newToDos)\n    await saveToDos(newToDos);\n    setText(\"\");\n  }\n\n  const updateModeToDo = async(id) => {\n    setUpdating(true);\n    const newToDos = {...toDos};\n    Object.keys(newToDos).map((key) => {\n      if(key === id) {\n        newToDos[id].updating = !newToDos[id].updating;\n      } else {\n        newToDos[key].updating = false;\n      }\n    })\n    setToDos(newToDos);\n    setText(\"\");\n    await saveToDos(newToDos);\n  }\n\n  const updateToDo = async(key) => {\n    const newToDos = {...toDos};\n    newToDos[key].text = text;\n    setToDos(newToDos);\n    setText(\"\");\n    await saveToDos(newToDos);\n  }\n\n  const completedToDo = async(key) => {\n    const newToDos = {...toDos};\n    newToDos[key].completed = !newToDos[key].completed;\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  }\n\n  const deleteToDo = async(key) => {\n    if(Platform.OS==='web'){\n      const ok = confirm('Do you want to delete this To Do?');\n      if(ok) {\n        const newToDos = {...toDos};\n        delete newToDos[key];\n        setToDos(newToDos);\n        await saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert('Delete To Do?', 'Are you sure?',[{text:'cancle'}, {text:'ok', onPress:async()=>{\n        const newToDos = {...toDos};\n        delete newToDos[key];\n        setToDos(newToDos);\n        await saveToDos(newToDos);\n      }}]);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text style={{...styles.btnText, color: working ? 'white' : theme.grey,}}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text style={{...styles.btnText, color: working ? theme.grey : 'white',}}>Travel</Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput \n        value={updating ? null : text} \n        returnKeyType=\"done\"\n        onChangeText={onChangetext} \n        onSubmitEditing={addToDo}\n        style={styles.input} \n        placeholder={working ? 'Add a To Do' : 'Where do you want to go?'} />\n        <ScrollView>\n          {Object.keys(toDos).filter((key)=>toDos[key].working===working).map((key)=>(<View style={styles.toDo} key={key}>\n            {toDos[key].updating ?\n            <TextInput \n              value={text} \n              returnKeyType=\"done\"\n              onChangeText={onChangetext} \n              onSubmitEditing={updateToDo}\n              style={styles.update} \n              placeholder={working ? 'Change a To Do' : 'Change the place?'}/> : \n            <Text style={toDos[key].completed ? {...styles.toDoText, textDecorationLine: 'line-through', color: theme.toDoBg,} : styles.toDoText}>\n              {toDos[key].text}\n            </Text>\n            }            \n            <TouchableOpacity onPress={() => {\n              completedToDo(key);\n            }}>\n              <Fontisto \n                name={toDos[key].completed ? \"checkbox-active\" : \"checkbox-passive\"} \n                size={18} \n                color={toDos[key].completed ? theme.toDoBg : 'white'} \n                style={{marginLeft:10,}} />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => {\n              updateModeToDo(key);\n            }}>\n              <Fontisto name=\"eraser\" size={18} color={theme.toDoBg} style={{marginLeft:10,}} />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => {\n              deleteToDo(key);\n            }}>\n              <Fontisto name=\"trash\" size={18} color={theme.toDoBg} style={{marginLeft:10,}} />\n            </TouchableOpacity>\n            </View>))}\n        </ScrollView>\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.background,\n    paddingHorizontal: 20,\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: 'space-between',\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 25,\n    marginVertical: 20,\n    fontSize: 16,\n  },\n  toDo: {\n    flexDirection: 'row',\n    backgroundColor: theme.grey,\n    marginBottom: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    borderRadius: 15,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  toDoText: {\n    color:'white',\n    fontSize: 18,\n    fontWeight: \"500\",\n    flexGrow: 1,\n  },\n  update: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 25,\n    fontSize: 16,\n    flexGrow: 1,\n    marginVertical: -5,\n  }\n});\n"],"sourceRoot":""}